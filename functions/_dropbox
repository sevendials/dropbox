#compdef dropbox
#autoload

local -a _1st_arguments
_1st_arguments=(
 'autostart:automatically start Dropbox at login'
 'exclude:ignores\/excludes a directory from syncing'
 'filestatus:get current sync status of one or more files'
 'help:provide help'
 'lansync:enables or disables LAN sync'
 'ls:list directory contents with current sync status'
 'proxy:set proxy settings for Dropbox'
 'puburl:get public url of a file in your Dropbox public folder'
 'running:return whether Dropbox is running'
 'sharelink:get a shared link for a file in your Dropbox'
 'start:start dropboxd'
 'status:get current status of the dropboxd'
 'stop:stop dropboxd'
 'throttle:set bandwidth limits for Dropbox'
 'update:download latest version of Dropbox'
 'version:print version information for Dropbox'
)

_dropbox_autostart=(
  'y:dropbox will start automatically at login'
  'n:dropbox will not start automatically at login'
)

_dropbox_lansync=(
  'y:dropbox will use LAN sync'
  'n:dropbox will not use LAN sync'
)

_dropbox_proxy=(
  'none'
  'auto'
  'manual'
)

_dropbox_proxy_types=(
  'http'
  'socks4'
  'socks5'
)

_dropbox_exclude=(
  'list:prints a list of directories currently excluded from syncing'
  'add:adds one or more directories to the exclusion list, then resynchronizes Dropbox'
  'remove:removes one or more directories from the exclusion list, then resynchronizes Dropbox'
)


_dropbox_exclude_files=(
  $(
    dropbox exclude list | sed 1d | awk '{ print "\""$0"\""}'
  )
)

_arguments \
'*:: :->subcmds' && return 0

if (( CURRENT == 1 )); then
  _describe -t commands "Dropbox subcommand" _1st_arguments
  return
fi

if (( CURRENT == 2 )); then
  case "$words[1]" in
    autostart)
      _describe -t commands "Dropbox autostart" _dropbox_autostart
    ;;
    lansync)
      _describe -t commands "Dropbox lansync" _dropbox_lansync
    ;;
    proxy)
      _describe -t commands "Dropbox proxy" _dropbox_proxy
    ;;
    exclude)
      _describe -t commands "Dropbox exclude" _dropbox_exclude
    ;;
    puburl|ls|filestatus|sharelink)
      _files
    ;;
    *)
      return
    ;;
  esac
fi

if (( CURRENT > 1 )); then
  case "$words[1]" in
    puburl|ls|filestatus|sharelink)
      _files
    ;;
  esac
fi

if (( CURRENT > 2 )); then
  if [[ "$words[1]" == "exclude" ]]; then
    case "$words[2]" in
      add)
        _files
      ;;
      remove)
        _arguments "*: :( $_dropbox_exclude_files )"
      ;;
    esac
  elif [[ "$words[1]" == "proxy" ]]; then
    if (( CURRENT == 3 )); then
      if [[ "$words[2]" == "manual" ]]; then
        _describe -t commands "Dropbox proxy" _dropbox_proxy_types
      fi
    fi
  fi
fi



return
